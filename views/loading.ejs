<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Generating Comic â€” AI Comic Generator</title>

  <!-- Fonts & Icons -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Comic+Neue:wght@700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

  <style>
    :root {
      --aurora-1: #002b36;  /* deep teal */
      --aurora-2: #313186;  /* indigo */
      --aurora-3: #712c91;  /* royal purple */
      --aurora-4: #b14be1;  /* vivid magenta */
      --glass-bg: rgba(255,255,255,0.10);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html, body {
      height: 100%;
      font-family: 'Inter', sans-serif;
    }

    body {
      background: linear-gradient(130deg, var(--aurora-1) 0%, var(--aurora-2) 30%, var(--aurora-3) 65%, var(--aurora-4) 100%);
      background-size: 250% 250%;
      animation: bgShift 22s ease-in-out infinite;
      color: #e8e8e8;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 40px 20px;
    }

    @keyframes bgShift {
      0%, 100% { background-position: 0% 40%; }
      50% { background-position: 100% 60%; }
    }

    /* Main Loading Card */
    .card {
      background: var(--glass-bg);
      backdrop-filter: blur(18px);
      border: 1px solid rgba(255,255,255,0.18);
      border-radius: 22px;
      padding: 50px 40px;
      box-shadow: 0 15px 50px rgba(0,0,0,0.4);
      text-align: center;
      max-width: 600px;
      width: 100%;
      position: relative;
      overflow: hidden;
    }

    .card::before {
      content: "";
      position: absolute;
      inset: -2px;
      background: linear-gradient(140deg, rgba(0,255,255,0.2), rgba(255,0,255,0.15));
      filter: blur(60px);
      z-index: -1;
      opacity: 0.25;
    }

    /* Loading Icon */
    .loading-icon {
      margin-bottom: 30px;
    }

    .loading-icon i {
      font-size: 4rem;
      background: linear-gradient(45deg, var(--aurora-3), var(--aurora-4));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      animation: pulse 2s ease-in-out infinite;
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.1); }
    }

    /* Enhanced text readability */
    h2 {
      font-family: 'Comic Neue', cursive;
      font-size: 2.2rem;
      color: #ffffff;
      margin-bottom: 30px;
      text-shadow: 0 2px 8px rgba(0,0,0,0.7);
      font-weight: 700;
    }

    h3 {
      font-family: 'Comic Neue', cursive;
      font-size: 1.4rem;
      color: #ffffff;
      margin-bottom: 20px;
      text-shadow: 0 1px 4px rgba(0,0,0,0.5);
    }

    /* Comic Details with better contrast */
    .comic-details {
      background: rgba(0,0,0,0.6);
      border: 1px solid rgba(255,255,255,0.3);
      border-radius: 15px;
      padding: 25px;
      margin-bottom: 40px;
      backdrop-filter: blur(12px);
    }

    .comic-details p {
      color: #ffffff;
      margin-bottom: 12px;
      font-size: 1.1rem;
      line-height: 1.6;
      text-shadow: 0 1px 3px rgba(0,0,0,0.5);
    }

    .comic-details strong {
      color: #ffffff;
      font-weight: 700;
      background: linear-gradient(45deg, var(--aurora-3), var(--aurora-4));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-shadow: none;
    }

    /* Progress Section */
    .progress-section {
      margin-bottom: 30px;
    }

    .progress-container {
      background: rgba(0,0,0,0.3);
      border-radius: 15px;
      height: 25px;
      overflow: hidden;
      position: relative;
      border: 1px solid rgba(255,255,255,0.1);
    }

    #progress-bar {
      background: linear-gradient(135deg, var(--aurora-2), var(--aurora-4));
      height: 100%;
      width: 0%;
      transition: width 0.5s ease;
      border-radius: 15px;
      position: relative;
      overflow: hidden;
    }

    #progress-bar::after {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
      animation: shimmer 2s infinite;
    }

    @keyframes shimmer {
      0% { left: -100%; }
      100% { left: 100%; }
    }

    /* Progress text improvements */
    #progress-text {
      margin-top: 15px;
      color: #ffffff;
      font-size: 1.2rem;
      font-weight: 600;
      text-shadow: 0 1px 3px rgba(0,0,0,0.6);
    }

    /* Status message enhancement */
    .status-message {
      color: #ffffff;
      font-style: italic;
      font-size: 1.1rem;
      line-height: 1.6;
      text-shadow: 0 1px 3px rgba(0,0,0,0.5);
      opacity: 0.9;
    }

    /* Icon color improvements */
    .comic-details i,
    #progress-text i,
    .status-message i {
      color: var(--aurora-4);
      text-shadow: 0 0 8px rgba(177,75,225,0.5);
    }

    /* Error Styling */
    .error {
      background: rgba(255,67,67,0.15);
      border: 1px solid rgba(255,67,67,0.35);
      color: #ff8383;
      margin-top: 20px;
    }

    .error h3 {
      color: #ff5252;
      margin-bottom: 15px;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      gap: 10px;
      padding: 12px 24px;
      border: none;
      border-radius: 50px;
      background: linear-gradient(45deg, var(--aurora-3), var(--aurora-4));
      color: white;
      text-decoration: none;
      font-family: 'Comic Neue', cursive;
      font-weight: 600;
      transition: all 0.3s ease;
      margin-top: 15px;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(177,75,225,0.4);
    }

    /* Floating Animation Elements */
    .floating-elements {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      overflow: hidden;
    }

    .floating-element {
      position: absolute;
      opacity: 0.1;
      animation: float 8s ease-in-out infinite;
    }

    .floating-element:nth-child(1) {
      top: 20%;
      left: 10%;
      animation-delay: 0s;
    }

    .floating-element:nth-child(2) {
      top: 60%;
      right: 15%;
      animation-delay: 2s;
    }

    .floating-element:nth-child(3) {
      bottom: 30%;
      left: 20%;
      animation-delay: 4s;
    }

    @keyframes float {
      0%, 100% { 
        transform: translateY(0px) rotate(0deg); 
        opacity: 0.1;
      }
      50% { 
        transform: translateY(-20px) rotate(5deg); 
        opacity: 0.2;
      }
    }

    /* Mobile Optimizations */
    @media (max-width: 768px) {
      .card {
        padding: 30px 20px;
        margin: 20px;
      }

      h2 {
        font-size: 1.8rem;
      }

      .loading-icon i {
        font-size: 3rem;
      }

      .comic-details {
        padding: 20px;
      }
    }

    /* Custom Scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
    }
    ::-webkit-scrollbar-track {
      background: rgba(255,255,255,0.04);
    }
    ::-webkit-scrollbar-thumb {
      background: linear-gradient(45deg, var(--aurora-2), var(--aurora-4));
      border-radius: 4px;
    }
  </style>
</head>
<body>
  <!-- Floating Animation Elements -->
  <div class="floating-elements">
    <div class="floating-element">ðŸ’«</div>
    <div class="floating-element">âš¡</div>
    <div class="floating-element">ðŸŽ¨</div>
  </div>

  <!-- Main Loading Card -->
  <div class="card">
    <div class="loading-icon">
      <i class="fas fa-magic fa-spin"></i>
    </div>
    
    <h2>Generating Your Comic...</h2>
    
    <div class="comic-details">
      <h3><i class="fas fa-info-circle"></i> Your Comic Details</h3>
      <p><strong>Topic:</strong> <%= topic %></p>
      <p><strong>Genre:</strong> <%= genre %></p>
      <p><strong>Panels:</strong> <%= panels %></p>
      <p><strong>Style:</strong> <%= style %></p>
    </div>

    <div class="progress-section">
      <div class="progress-container">
        <div id="progress-bar"></div>
      </div>
      <p id="progress-text">Starting generation...</p>
    </div>

    <p class="status-message">
      <i class="fas fa-clock"></i> This may take a few minutes. Please don't close this page.
    </p>
  </div>

  <script>
    const comicId = '<%= comicId %>';
    
    function checkStatus() {
      fetch(`/status/${comicId}`)
        .then(response => response.json())
        .then(data => {
          if (data.status === 'completed') {
            // Add completion animation
            const progressBar = document.getElementById('progress-bar');
            const progressText = document.getElementById('progress-text');
            
            if (progressBar) {
              progressBar.style.width = '100%';
            }
            if (progressText) {
              progressText.innerHTML = '<i class="fas fa-check"></i> Comic completed! Redirecting...';
            }
            
            setTimeout(() => {
              window.location.href = data.redirect;
            }, 1000);
            
          } else if (data.status === 'error') {
            document.body.innerHTML += `
              <div class="card error">
                <h3><i class="fas fa-exclamation-triangle"></i> Generation Failed</h3>
                <p>${data.error || 'Unknown error occurred'}</p>
                <a href="/create" class="btn">
                  <i class="fas fa-redo"></i> Try Again
                </a>
              </div>
            `;
          } else {
            // Update progress
            const progressBar = document.getElementById('progress-bar');
            const progressText = document.getElementById('progress-text');
            
            if (progressBar) {
              progressBar.style.width = (data.progress || 0) + '%';
            }
            if (progressText) {
              progressText.innerHTML = `<i class="fas fa-cog fa-spin"></i> ${data.currentStep || 'Processing...'}`;
            }
            
            // Check again in 2 seconds
            setTimeout(checkStatus, 2000);
          }
        })
        .catch(error => {
          console.error('Error checking status:', error);
          setTimeout(checkStatus, 5000); // Retry in 5 seconds
        });
    }
    
    // Start checking status
    setTimeout(checkStatus, 2000);
  </script>
</body>
</html>
